import java.awt.Point;

/**
 * This class is for monster 2.
 */
public class MonsterTwo extends Monster {
	private Hero hero;

	public MonsterTwo(GameComponent component,Hero hero) {
		super(component);
		this.hero=hero;
	}

	@Override
	public String getName() {
		return "monster2";
	}

	// This monster moves as it likes now, but it will be regulated XD.
	@Override
	public void run() {
		while (true) {
			killHero();
			double random0To4 = (int) (Math.random() * 4);
			if (random0To4 == 0 && this.movable("up") && this.getPosition().y > 0) {// up
				Point newPosition = new Point(this.position.x, this.position.y - this.speed);
				this.setPosition(newPosition);
			}
			if (random0To4 == 1 && this.movable("down") && this.getPosition().y < 650) {// down
				Point newPosition = new Point(this.position.x, this.position.y + this.speed);
				this.setPosition(newPosition);
			}
			if (random0To4 == 2 && this.movable("left") && this.getPosition().x > 0) {// left
				Point newPosition = new Point(this.position.x - this.speed, this.position.y);
				this.setPosition(newPosition);
			}
			if (random0To4 == 3 && this.movable("right") && this.getPosition().x < 650) {// right
				Point newPosition = new Point(this.position.x + this.speed, this.position.y);
				this.setPosition(newPosition);
			}
			try {
				Thread.sleep(751);
			} catch (InterruptedException exception) {
				System.out.println("monstertwo is killed");
			}
			
		}

	}
	
	public void killHero() {
		for (int i = -49; i < 49; i++) {
			for (int j = -49; j < 49; j++) {
				if (this.getPosition().x == this.hero.getPosition().x + i
						&& this.getPosition().y == this.hero.getPosition().y + j) {
					this.hero.setLife(this.hero.getLife() - 1);
					this.hero.setPosition(new Point(0, 0));
					System.out.println("I am killed by monster");
				}
			}
		}
	}

}
