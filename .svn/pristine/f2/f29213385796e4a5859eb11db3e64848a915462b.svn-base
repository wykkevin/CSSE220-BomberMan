import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class MoveListener implements KeyListener {

	private Hero hero;
	private gameComponent component;

	public MoveListener(Hero hero, gameComponent gameComponent) {
		this.hero = hero;
		this.component = gameComponent;
	}

	@Override
	public void keyPressed(KeyEvent e) {
		int key = e.getKeyCode();
		if (this.hero.getPosition().y > 0 && key == KeyEvent.VK_UP) {
			for(int i=this.hero.getPosition().x-25;i<this.hero.getPosition().x+25;i++){
				if(this.hero.getPosition().y-5>0){
					
				}
			}
				
			Point upPoint = new Point(this.hero.getPosition().x, this.hero.getPosition().y - 5);
			this.hero.setPosition(upPoint);
			System.out.println(this.hero.getPosition());
		}

		else if (this.hero.getPosition().y < 650 && key == KeyEvent.VK_DOWN) {
			Point downPoint = new Point(this.hero.getPosition().x, this.hero.getPosition().y + 5);
			this.hero.setPosition(downPoint);
			System.out.println(this.hero.getPosition());
		}

		else if (this.hero.getPosition().x > 0 && key == KeyEvent.VK_LEFT) {
			Point leftPoint = new Point(this.hero.getPosition().x - 5, this.hero.getPosition().y);
			this.hero.setPosition(leftPoint);
			System.out.println(this.hero.getPosition());
		}

		else if (this.hero.getPosition().x < 650 && key == KeyEvent.VK_RIGHT) {
			Point rightPoint = new Point(this.hero.getPosition().x + 5, this.hero.getPosition().y);
			this.hero.setPosition(rightPoint);
			System.out.println(this.hero.getPosition());
		}
		this.component.repaint();
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// No move
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// No move
	}

}
