import java.awt.Point;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

public class MoveListener implements KeyListener {

	private Hero hero;

	public MoveListener(Hero hero) {
		this.hero = hero;
	}

	@Override
	public void keyPressed(KeyEvent e) {
		switch (e.getKeyCode()) {
		case 38: // up arrow
			// Add restrictions to move
			if (this.hero.getPosition().y > 0) {
				Point upPoint = new Point(this.hero.getPosition().x, this.hero.getPosition().y - 50);
				this.hero.setPosition(upPoint);
				System.out.println(this.hero.getPosition());
			}
			break;
		case 40: // down arrow
			if (this.hero.getPosition().y < 1000) {// frame's height
				Point downPoint = new Point(this.hero.getPosition().x, this.hero.getPosition().y + 50);
				this.hero.setPosition(downPoint);
			}
			break;
		case 37: // left arrow
			if (this.hero.getPosition().x > 0) {
				Point leftPoint = new Point(this.hero.getPosition().x - 50, this.hero.getPosition().y);
				this.hero.setPosition(leftPoint);
			}
			break;
		case 39: // right arrow
			if (this.hero.getPosition().x < 1000) {// frame's width
				Point rightPoint = new Point(this.hero.getPosition().x + 50, this.hero.getPosition().y);
				this.hero.setPosition(rightPoint);
			}
			break;
		}
	}

	@Override
	public void keyReleased(KeyEvent arg0) {
		// No move
	}

	@Override
	public void keyTyped(KeyEvent arg0) {
		// No move
	}

}
